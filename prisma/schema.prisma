// File: prisma/schema.prisma

datasource db {
  provider = "postgresql"
  // Asegúrate de definir DATABASE_URL en tu archivo .env
  url        = env("PLANILLA_PRISMA_DATABASE_URL") 
}

generator client {
  provider = "prisma-client-js"
}

// =================================================================
// Modelos de Base de Datos
// =================================================================

// File: prisma/schema.prisma

model User {
  id          String   @id @default(cuid())
  nombre      String
  email       String   @unique
  rol         String // "super_admin" | "contador"
  companias   String[]
  activo      Boolean  @default(true)
  
  // 🔑 CAMBIO ESENCIAL: Campo para la contraseña hasheada
  hashedPassword String? 
}

model Company {
  id                 String              @id @default(cuid())
  nombre             String
  ruc                String              @unique // <--- CORRECCIÓN CLAVE AQUÍ
  direccion          String?
  telefono           String?
  email              String?
  representanteLegal String?
  activo             Boolean             @default(true)
  fechaCreacion      DateTime            @default(now())
  
  employees          Employee[]
  legalParameters    LegalParameters[]
  isrBrackets        ISRBracket[]
  payrollEntries     PayrollEntry[]
  decimoCalculations DecimoTercerMes[]
  sipePayments       SIPEPayment[]
}

model Employee {
  id                             String                @id @default(cuid())
  companiaId                     String
  company                        Company               @relation(fields: [companiaId], references: [id], onDelete: Cascade)
  cedula                         String
  nombre                         String
  apellido                       String?
  fechaIngreso                   DateTime
  salarioBase                    Float
  departamento                   String?
  cargo                          String?
  estado                         String                @default("activo") // "activo" | "inactivo"
  email                          String?
  telefono                       String?
  direccion                      String?
  deduccionesBancarias           Float?
  mesesDeduccionesBancarias      Int[] // Postgres ARRAY of INT
  prestamos                      Float?
  mesesPrestamos                 Int[] // Postgres ARRAY of INT
  
  // Usamos JSON para estructuras complejas como EmployeeDeduction[]
  otrasDeduccionesPersonalizadas Json? 

  payrollEntries                 PayrollEntry[]
  decimoCalculations             DecimoTercerMes[]

  @@unique([companiaId, cedula])
}

model LegalParameters {
  id              String            @id @default(cuid())
  companiaId      String
  company         Company           @relation(fields: [companiaId], references: [id], onDelete: Cascade)
  nombre          String
  tipo            String
  porcentaje      Float
  activo          Boolean           @default(true)
  fechaVigencia   DateTime

  @@unique([companiaId, nombre, fechaVigencia])
}

model ISRBracket {
  id              String            @id @default(cuid())
  companiaId      String
  company         Company           @relation(fields: [companiaId], references: [id], onDelete: Cascade)
  desde           Float
  hasta           Float?
  porcentaje      Float
  deduccionFija   Float
}

model PayrollEntry {
  id                             String            @id @default(cuid())
  companiaId                     String
  company                        Company           @relation(fields: [companiaId], references: [id], onDelete: Cascade)
  empleadoId                     String
  employee                       Employee          @relation(fields: [empleadoId], references: [id], onDelete: Cascade)
  periodo                        String
  tipoPeriodo                    String
  salarioBruto                   Float
  horasExtras                    Float
  bonificaciones                 Float
  otrosIngresos                  Float
  seguroSocialEmpleado           Float
  seguroEducativo                Float
  isr                            Float
  deduccionesBancarias           Float?
  prestamos                      Float?
  otrasDeduccionesPersonalizadas Float
  otrasRetenciones               Float
  salarioNeto                    Float
  fechaCalculo                   DateTime          @default(now())
  estado                         String
  seguroSocialEmpleador          Float
  seguroEducativoEmpleador       Float
  riesgoProfesional              Float
  fondoCesantia                  Float

  @@unique([empleadoId, periodo])
}

model DecimoTercerMes {
  id                        String            @id @default(cuid())
  companiaId                String
  company                   Company           @relation(fields: [companiaId], references: [id], onDelete: Cascade)
  empleadoId                String
  employee                  Employee          @relation(fields: [empleadoId], references: [id], onDelete: Cascade)
  anio                      Int
  salarioPromedio           Float
  mesesTrabajados           Int
  montoTotal                Float
  css                       Float
  cssPatrono                Float
  isr                       Float
  totalDeducciones          Float
  totalAportesPatronales    Float
  montoNeto                 Float
  pagoAbril                 Float
  pagoAgosto                Float
  pagoDiciembre             Float
  fechaCalculo              DateTime          @default(now())
  estado                    String

  @@unique([empleadoId, anio])
}

model SIPEPayment {
  id                               String    @id @default(cuid())
  companiaId                       String
  company                          Company   @relation(fields: [companiaId], references: [id], onDelete: Cascade)
  periodo                          String
  fechaLimite                      DateTime
  totalSeguroSocialEmpleado        Float
  totalSeguroSocialEmpleador       Float
  totalSeguroEducativoEmpleado     Float
  totalSeguroEducativoEmpleador    Float
  totalRiesgoProfesional           Float
  totalFondoCesantia               Float
  totalISR                         Float
  totalAPagar                      Float
  estado                           String
  fechaPago                        DateTime?
  referenciaPago                   String?

  @@unique([companiaId, periodo])
}